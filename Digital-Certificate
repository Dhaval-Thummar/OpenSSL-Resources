# Private key
openssl genrsa -des3 -out domain.key 2048

# Verify private key
openssl rsa -check -in domain.key

# Encrypt a private key
openssl rsa -des3 -in unencrypted.key -out encrypted.key

# Decrypt a private key
openssl rsa -in encrypted.key -out decrypted.key


# Generate 2048-bit private key (domain.key) and a CSR (domain.csr). (-nodes: domain.key should not be encrypted)
openssl req -newkey rsa:2048 -nodes -keyout domain.key -out domain.csr

# Generating CSR (domain.csr) based on existing private key (domain.key). (-key: existing private key, -new: CSR to be generated)
openssl req -key domain.key -new -out domain.csr

# Generate a CSR from existing private key and certificate. (renewing an existing certificate but you or your CA do not have the original CSR for some reason.  It basically saves you the trouble of re-entering the CSR information, as it extracts that information from the existing certificate.)
openssl x509 -in domain.crt -signkey domain.key -x509toreq -out domain.csr

# Generating self signed certificate. (-x509 option tells req to create a self-signed cerificate. The -days 365 option specifies that the certificate will be valid for 365 days)
openssl req -newkey rsa:2048 -nodes -keyout domain.key -x509 -days 365 -out domain.crt

# Generating self signed certificate (domain.crt) from an existing private key (domain.key)
openssl req -key domain.key -new -x509 -days 365 -out domain.crt

# Generating self signed certificate from an existing private key (domain.key) and CSR (domain.csr) (Advantage: No need of providing CSR information)
openssl x509 -signkey domain.key -in domain.csr -req -days 365 -out domain.crt

# View CSR (domain.csr) entries
openssl req -text -noout -verify -in domain.csr

# View certificate (domain.crt) entries
openssl x509 -text -noout -in domain.crt

# Verify certificate was signed by a CA
openssl verify -verbose -CAFile ca.crt domain.crt

# Verify a private key (domain.key) matches a certificate (domain.crt) and CSR (domain.csr)
openssl rsa -noout -modulus -in domain.key | openssl md5
openssl x509 -noout -modulus -in domain.crt | openssl md5
openssl req -noout -modulus -in domain.csr | openssl md5

# Convert a certificate format PEM to DER
openssl x509 -in domain.crt -outform der -out domain.der

# Convert a certificate format DER to PEM
openssl x509 -inform der -in domain.der -out domain.crt

# Non-interactive way to generate Certificate Signing Request (CSR)
-subj "/C=US/ST=New York/L=Brooklyn/O=Example Brooklyn Company/CN=examplebrooklyn.com"


References:

Website:

1. Digitalocean.com: https://goo.gl/Qokp8m 
